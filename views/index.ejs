<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="step-indicator d-flex justify-content-between mb-4">
            <div class="text-center step-link" data-step="1">
                <div class="step <%= step >= 1 ? 'active' : '' %>">
                    <i class="fas fa-pencil-alt"></i>
                </div>
                <small>Name</small>
            </div>
            <div class="text-center step-link" data-step="2">
                <div class="step <%= step >= 2 ? 'active' : '' %>">
                    <i class="fas fa-list"></i>
                </div>
                <small>Criteria</small>
            </div>
            <div class="text-center step-link" data-step="3">
                <div class="step <%= step >= 3 ? 'active' : '' %>">
                    <i class="fas fa-balance-scale"></i>
                </div>
                <small>Weights</small>
            </div>
            <div class="text-center step-link" data-step="4">
                <div class="step <%= step >= 4 ? 'active' : '' %>">
                    <i class="fas fa-tasks"></i>
                </div>
                <small>Alternatives</small>
            </div>
            <div class="text-center step-link" data-step="5">
                <div class="step <%= step >= 5 ? 'active' : '' %>">
                    <i class="fas fa-star"></i>
                </div>
                <small>Evaluate</small>
            </div>
        </div>

        <!-- Step 1: Decision Name -->
        <div class="step-container <%= step === 1 ? 'active' : '' %>" id="step1">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Name Your Decision</h3>
                    <p class="card-text">What decision are you trying to make?</p>
                    <form id="nameForm" class="needs-validation" novalidate>
                        <input type="hidden" name="id" id="decisionId" value="<%= Date.now() %>" autocomplete="off">
                        <div class="mb-3">
                            <input type="text" class="form-control" id="decisionName" name="decisionName" placeholder="Enter decision name" required autocomplete="off">
                            <div class="invalid-feedback">
                                Please enter a name for your decision.
                            </div>
                        </div>
                        <button type="button" id="nameFormNextBtn" class="btn btn-primary w-100">Next</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Step 2: Define Criteria -->
        <div class="step-container <%= step === 2 ? 'active' : '' %>" id="step2">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Define Your Criteria</h3>
                    <p class="card-text">What factors are important in making this decision?</p>
                    <form id="criteriaForm" class="needs-validation" novalidate>
                        <div id="criteriaList" class="mb-3">
                            <div class="criteria-item">
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control" name="criteria[]" placeholder="Enter criterion" required>
                                    <button type="button" class="btn btn-outline-danger remove-btn">Remove</button>
                                </div>
                                <div class="collapse mt-2 mb-3">
                                    <textarea class="form-control" name="criteriaDesc[]" placeholder="Optional description for this criterion" rows="2"></textarea>
                                </div>
                                <div class="text-end">
                                    <button type="button" class="btn btn-sm btn-link toggle-description">Add description</button>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary mb-3" id="addCriteriaBtn">Add Another Criterion</button>
                        <div>
                            <button type="submit" class="btn btn-primary">Next</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Step 3: Set Weights -->
        <div class="step-container <%= step === 3 ? 'active' : '' %>" id="step3">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Set Criteria Weights</h3>
                    <p class="card-text">How important is each criterion? Set the weight as a percentage (0-100%).</p>
                    <form id="weightsForm" class="needs-validation" novalidate>
                        <div id="weightsList" class="mb-3">
                            <% if (decisions && currentId && decisions[currentId] && decisions[currentId].criteria) { %>
                                <% decisions[currentId].criteria.forEach(function(criterion) { %>
                                    <div class="mb-3">
                                        <label class="form-label"><%= criterion %></label>
                                        <div class="d-flex align-items-center">
                                            <% 
                                                let weightValue = 0;
                                                if (decisions[currentId].weights && decisions[currentId].weights[criterion] !== undefined) {
                                                    // Convert any scale to percentage (0-100)
                                                    const rawWeight = decisions[currentId].weights[criterion];
                                                    if (rawWeight >= 0 && rawWeight <= 1) {
                                                        // Convert decimal (0-1) to percentage
                                                        weightValue = Math.round(rawWeight * 100);
                                                    } else if (rawWeight >= 1 && rawWeight <= 10) {
                                                        // Convert old scale (1-10) to percentage
                                                        weightValue = Math.round((rawWeight / 10) * 100);
                                                    } else {
                                                        // Assume it's already a percentage or handle other scales
                                                        weightValue = Math.round(Number(rawWeight));
                                                    }
                                                } else {
                                                    // Default weight: equal distribution
                                                    weightValue = Math.round(100 / decisions[currentId].criteria.length);
                                                }
                                            %>
                                            <input type="range" 
                                                   class="form-range me-2" 
                                                   name="weights[<%= criterion %>]" 
                                                   id="weights[<%= criterion %>]"
                                                   min="0" 
                                                   max="100" 
                                                   step="1"
                                                   value="<%= weightValue %>"
                                                   required>
                                            <span class="badge bg-primary" id="weight-value-<%= criterion.replace(/\s+/g, '-') %>"><%= weightValue %>%</span>
                                        </div>
                                    </div>
                                <% }); %>
                                
                                <div class="alert alert-info mt-3 mb-4">
                                    <div id="total-weight-text" class="mb-2">Total weight: 0%</div>
                                    <div class="progress">
                                        <div id="total-weight-progress" class="progress-bar" role="progressbar" style="width: 0%"></div>
                                    </div>
                                </div>
                                
                                <script>
                                    // Update value display and total when sliders move
                                    document.addEventListener('DOMContentLoaded', function() {
                                        const updateTotalWeightDisplay = function() {
                                            let totalWeight = 0;
                                            <% decisions[currentId].criteria.forEach(function(criterion) { %>
                                                const weightInput = document.getElementById(`weights[<%= criterion %>]`);
                                                if (weightInput) {
                                                    totalWeight += parseInt(weightInput.value, 10) || 0;
                                                }
                                            <% }); %>
                                            
                                            const totalWeightText = document.getElementById('total-weight-text');
                                            const progressBar = document.getElementById('total-weight-progress');
                                            
                                            if (totalWeightText && progressBar) {
                                                totalWeightText.textContent = `Total weight: ${totalWeight}%`;
                                                
                                                // Update progress bar
                                                const progressWidth = Math.min(totalWeight, 100);
                                                progressBar.style.width = `${progressWidth}%`;
                                                
                                                // Set color based on how close to 100% we are
                                                if (totalWeight === 100) {
                                                    progressBar.className = 'progress-bar bg-success';
                                                    totalWeightText.className = 'mb-2 text-success';
                                                } else if (totalWeight > 90 && totalWeight < 110) {
                                                    progressBar.className = 'progress-bar bg-warning';
                                                    totalWeightText.className = 'mb-2 text-warning';
                                                } else {
                                                    progressBar.className = 'progress-bar bg-danger';
                                                    totalWeightText.className = 'mb-2 text-danger';
                                                }
                                            }
                                        };
                                        
                                        // Set up event listeners for all weight sliders
                                        <% decisions[currentId].criteria.forEach(function(criterion) { %>
                                            const inputElement = document.getElementById(`weights[<%= criterion %>]`);
                                            const displayElement = document.getElementById(`weight-value-<%= criterion.replace(/\s+/g, '-') %>`);
                                            
                                            if (inputElement && displayElement) {
                                                inputElement.addEventListener('input', function() {
                                                    displayElement.textContent = this.value + '%';
                                                    updateTotalWeightDisplay();
                                                });
                                            }
                                        <% }); %>
                                        
                                        // Initialize total weight display
                                        setTimeout(updateTotalWeightDisplay, 100);
                                    });
                                </script>
                            <% } else { %>
                                <div class="alert alert-warning">
                                    Please define criteria first.
                                </div>
                            <% } %>
                        </div>
                        <% if (decisions && currentId && decisions[currentId] && decisions[currentId].criteria && decisions[currentId].criteria.length > 0) { %>
                            <button type="submit" class="btn btn-primary">Next</button>
                        <% } else { %>
                            <a href="/" class="btn btn-secondary">Start Over</a>
                        <% } %>
                    </form>
                </div>
            </div>
        </div>

        <!-- Step 4: Add Alternatives -->
        <div class="step-container <%= step === 4 ? 'active' : '' %>" id="step4">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Add Alternatives</h3>
                    <p class="card-text">What are your options?</p>
                    <form id="alternativesForm" class="needs-validation" novalidate>
                        <div id="alternativesList" class="mb-3">
                            <div class="alternative-item">
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control" name="alternatives[]" placeholder="Enter alternative" required>
                                    <button type="button" class="btn btn-outline-danger remove-btn">Remove</button>
                                </div>
                                <div class="collapse mt-2 mb-3">
                                    <textarea class="form-control" name="alternativesDesc[]" placeholder="Optional description for this alternative" rows="2"></textarea>
                                </div>
                                <div class="text-end">
                                    <button type="button" class="btn btn-sm btn-link toggle-description">Add description</button>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary mb-3" id="addAlternativeBtn">Add Another Alternative</button>
                        <div>
                            <button type="submit" class="btn btn-primary">Next</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Step 5: Evaluate Alternatives -->
        <div class="step-container <%= step === 5 ? 'active' : '' %>" id="step5">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Evaluate Alternatives</h3>
                    <p class="card-text">Rate each alternative against each criterion (1-10)</p>
                    <form id="evaluationForm" onsubmit="return false;">
                        <div id="evaluationMatrix" class="mb-3">
                            <!-- Evaluation matrix will be generated dynamically by JavaScript -->
                        </div>
                        <button type="submit" class="btn btn-primary" onclick="return false;">Calculate Results</button>
                        <div class="mt-3 alert alert-info">
                            <i class="fas fa-info-circle"></i> After calculating, you'll be redirected to a detailed results dashboard where you can analyze your decision, share it with others, and save it to your account.
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Initialize calculation button when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    // Find the calculate button and attach event handler
    const calculateButton = document.querySelector('#evaluationForm button[type="submit"]');
    if (calculateButton) {
        calculateButton.addEventListener('click', calculateButtonHandler);
    }
});
</script>

<style>
    .step-indicator .step {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 8px;
        transition: all 0.3s ease;
    }

    .step-indicator .step.active {
        background-color: #007bff;
        color: white;
    }

    .step-link {
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .step-link:hover .step:not(.active) {
        background-color: #dee2e6;
        transform: scale(1.1);
    }

    .step-link .fas {
        font-size: 1.2em;
    }

    .step-indicator small {
        color: #6c757d;
        font-weight: 500;
    }

    .step-indicator .active + small {
        color: #007bff;
    }
</style>
